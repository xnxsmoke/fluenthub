-- Fluent & Addons
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

-- ---------- Coordinates ----------
local castleCFrame = CFrame.new(432.6329, 4384.6372, -1898.6741)
local desertCFrame = CFrame.new(463.8988, 4383.7646, -1888.2440)

local worldCoordinates = {
    ["AotWorld"] = Vector3.new(-8375.900390625, 37.72277069091797, -1800.907470703125),
    ["World Arena"] = Vector3.new(1650.9036865234375, 21.886470794677734, -66.51301574707031),
    ["BcWorld"] = Vector3.new(198.33868408203125, 36.207679748535156, 4296.109375),
    ["BleachWorld"] = Vector3.new(2629.0126953125, 42.96100616455078, -2628.310546875),
    ["ChainsawWorld"] = Vector3.new(214.68453979492188, 30.3960934765625, -4301.60546875),
    ["DBWorld"] = Vector3.new(-2549.53515625, 24.698104858398438, 5857.16650390625),
    ["DSWorld"] = Vector3.new(-6178.115234375, 23.3775634765625, 1162.912109375),
    ["DanWorld"] = Vector3.new(-3345.234130859375, 19.462051391601562, -101.47228240966797),
    ["FrierenWorld"] = Vector3.new(-4546.130859375, 41.52750015258789, -7541.955078125),
    ["HxHWorld"] = Vector3.new(-4779.986328125, 33.77476501464844, -2668.45849609375),
    ["JJKWorld"] = Vector3.new(561.7188720703125, 28.70819091796875, 4455.97509765625),
    ["JeJuEvent"] = Vector3.new(3987.016845703125, 56.646728515625, 3247.959716796875),
    ["JojoWorld"] = Vector3.new(4816.31640625, 27.442340850830078, -120.22998046875),
    ["JungleEvent"] = Vector3.new(-1453.1409912109375, 18.44970703125, 5660.87109375),
    ["KaijuWorld"] = Vector3.new(4444.1357421875, 18.1916561126709, 119.92483520507812),
    ["NarutoWorld"] = Vector3.new(-3380.2373046875, 27.760528564453125, 2257.261962890625),
    ["OPMWorld"] = Vector3.new(3299.468017578125, 22.894081115722656, 6342.1904296875),
    ["OPWorld"] = Vector3.new(-2851.106201171875, 46.89878845214844, -2011.395263671875),
    ["ShieldWorld"] = Vector3.new(2401.5673828125, 28.495229721069336, -3764.9169921875),
    ["SlimeWorld"] = Vector3.new(-1289.81689453125, 22.41050910949707, -4613.44775390625),
    ["Solo2World"] = Vector3.new(-219.01434326171875, 22.122146606445312, -15.402612686157227),
    ["SoloWorld"] = Vector3.new(577.96826171875, 25.934627532958984, 261.4522705078125),
    ["WinterEvent"] = Vector3.new(4788.8017578125, 27.2264404296875, -2218.416015625)
}

-- ---------- Flags ----------
local standCastleEnabled = false
local standDesertEnabled = false
local autoRestartCastle = false
local autoRestartDesert = false
_G.autoExecHub = _G.autoExecHub ~= false

-- ---------- Helpers ----------
local function safeStandAt(cf)
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = cf
    end
end

local function fireSafe(args)
    pcall(function() dataRemoteEvent:FireServer(unpack(args)) end)
end

local function teleportToWorld(worldName)
    local pos = worldCoordinates[worldName]
    if not pos then return end
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart",5)
    if hrp then hrp.CFrame = CFrame.new(pos) end
end

-- ---------- Create Hub ----------
local hubCreated = false
local function createHub()
    if hubCreated then return end
    hubCreated = true

    local Window = Fluent:CreateWindow({
        Title = "xnxsmoke Hub",
        SubTitle = "by xnxsmoke",
        TabWidth = 160,
        Size = UDim2.fromOffset(580, 460),
        Acrylic = true,
        Theme = "Dark",
        MinimizeKey = Enum.KeyCode.LeftControl
    })

    local Tabs = {
        InfCastle = Window:AddTab({Title = "InfCastle"}),
        InfDesert = Window:AddTab({Title = "InfDesert"}),
        Teleport = Window:AddTab({Title = "Teleport"}),
        Misc = Window:AddTab({Title = "Misc"})
    }

    -- InfCastle
    Tabs.InfCastle:AddButton({Title = "Start Infinite Castle", Callback = function()
        fireSafe({ { { Event = "InfiniteCastleAction", Action = "Create" }, "\r" } })
        task.wait(1)
        fireSafe({ { { Dungeon = 3604563306, Event = "InfiniteCastleAction", Action = "Start" }, "\r" } })
        if standCastleEnabled then safeStandAt(castleCFrame) end
    end})
    Tabs.InfCastle:AddToggle("StandCastle", {Title = "Stand in the Middle", Default = false}):OnChanged(function(v)
        standCastleEnabled = v
        if v then safeStandAt(castleCFrame) end
    end)
    Tabs.InfCastle:AddToggle("AutoRestartCastle", {Title = "Auto Restart on Portal Destroy", Default = false}):OnChanged(function(v)
        autoRestartCastle = v
    end)

    -- InfDesert
    Tabs.InfDesert:AddButton({Title = "Start Infinite Desert", Callback = function()
        fireSafe({ { { Event = "InfiniteModeAction", Action = "Create" }, "\r" } })
        task.wait(1)
        fireSafe({ { { Dungeon = 3604563306, Event = "InfiniteModeAction", Action = "Start" }, "\r" } })
        if standDesertEnabled then safeStandAt(desertCFrame) end
    end})
    Tabs.InfDesert:AddToggle("StandDesert", {Title = "Stand in the Middle", Default = false}):OnChanged(function(v)
        standDesertEnabled = v
        if v then safeStandAt(desertCFrame) end
    end)
    Tabs.InfDesert:AddToggle("AutoRestartDesert", {Title = "Auto Restart on Portal Destroy", Default = false}):OnChanged(function(v)
        autoRestartDesert = v
    end)

    -- Teleport
    local selectedWorld = nil
    local Dropdown = Tabs.Teleport:AddDropdown("WorldDropdown", {
        Title = "Select World",
        Values = (function()
            local t = {}
            for k,_ in pairs(worldCoordinates) do table.insert(t,k) end
            return t
        end)(),
        Multi = false,
        Default = 1
    })
    Dropdown:OnChanged(function(value) selectedWorld = value end)
    Tabs.Teleport:AddButton({Title = "Teleport to World", Callback = function()
        if selectedWorld then teleportToWorld(selectedWorld) end
    end})

    -- Misc
    Tabs.Misc:AddParagraph({Title = "Info", Content = "Hub in beta testing"})
    Tabs.Misc:AddToggle("AutoExec", {Title = "Auto-Execute Hub on Mode Change", Default = _G.autoExecHub}):OnChanged(function(value)
        _G.autoExecHub = value
    end)

    -- Save & Interface Managers
    SaveManager:SetLibrary(Fluent)
    InterfaceManager:SetLibrary(Fluent)
    SaveManager:IgnoreThemeSettings()
    InterfaceManager:SetFolder("xnxsmokeHub")
    SaveManager:SetFolder("xnxsmokeHub/configs")
    InterfaceManager:BuildInterfaceSection(Tabs.Misc)
    SaveManager:BuildConfigSection(Tabs.Misc)

    Window:SelectTab(1)
    Fluent:Notify({Title = "xnxsmoke Hub", Content = "Loaded successfully!", Duration = 6})
    SaveManager:LoadAutoloadConfig()
end

-- ---------- Auto-Execute Hub (works across all sub-modes) ----------
if _G.autoExecHub then
    createHub() -- Avvia subito la hub al primo caricamento
end

-- ---------- Auto-Restart on Portal Destroy ----------
dataRemoteEvent.OnClientEvent:Connect(function(...)
    local args = {...}
    local function recursiveCheck(tbl)
        if type(tbl) ~= "table" then return end
        for k,v in pairs(tbl) do
            if type(v) == "table" then
                recursiveCheck(v)
            elseif k == "Message" and type(v) == "string" then
                if v:upper():find("PORTAL DESTROYED") then
                    if autoRestartCastle then task.spawn(function()
                        fireSafe({ { { Event = "InfiniteCastleAction", Action = "Leave" }, "\r" } })
                        task.wait(1.5)
                        fireSafe({ { { Event = "InfiniteCastleAction", Action = "Create" }, "\r" } })
                        task.wait(1)
                        fireSafe({ { { Dungeon = 3604563306, Event = "InfiniteCastleAction", Action = "Start" }, "\r" } })
                    end) end
                    if autoRestartDesert then task.spawn(function()
                        fireSafe({ { { Event = "InfiniteModeAction", Action = "Leave" }, "\r" } })
                        task.wait(1.5)
                        fireSafe({ { { Event = "InfiniteModeAction", Action = "Create" }, "\r" } })
                        task.wait(1)
                        fireSafe({ { { Dungeon = 3604563306, Event = "InfiniteModeAction", Action = "Start" }, "\r" } })
                    end) end
                end
            end
        end
    end
    for _, v in ipairs(args) do recursiveCheck(v) end
end)

-- ---------- Teleport on Respawn ----------
player.CharacterAdded:Connect(function()
    task.wait(0.5)
    if standCastleEnabled then safeStandAt(castleCFrame) end
    if standDesertEnabled then safeStandAt(desertCFrame) end
end)
